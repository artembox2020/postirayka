<?php

namespace backend\models\search;

use frontend\models\Transactions;
use yii\base\Model;
use yii\data\ActiveDataProvider;

/**
 * Class TransactionSearch
 * @package backend\models\search
 */
class TransactionSearch extends Transactions
{
    const RECORDS_PER_PAGE = 20;

    public function rules()
    {
        return [
            [['imei', 'operation_time'], 'string'],
            [['operation', 'created_at'], 'integer'],
            [['amount'], 'number']
        ];
    }

    public function scenarios()
    {
        return parent::scenarios(); // TODO: Change the autogenerated stub
    }

    public function search($card_no, $params)
    {
        $query = Transactions::find();

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => self::RECORDS_PER_PAGE
            ],
            'sort' => [
                'defaultOrder' => ['created_at' => SORT_DESC]
            ]
            
        ]);

        $removeKeys = ['cardNo', 'userId', 'page', 'per-page', 'sort'];
        $params = array_diff_key($params, array_flip($removeKeys));

        if (!empty($params) && !($this->load($params) && $this->validate())) {

            return $dataProvider;
        }

        $query->andFilterWhere(['card_no' => $card_no]);
        $query->andFilterWhere([
            'imei' => $this->imei,
            'operation' => $this->operation,
            'operation_time' => $this->operation_time,
            'amount' => $this->amount,
            'created_at' => $this->created_at,
        ]);

        return $dataProvider;
    }
}